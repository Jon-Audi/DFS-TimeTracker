import { Employee } from './Employee';

type TimeEntry @table(key: "timeEntryId") {
    timeEntryId: String! @id(from: "cuid2")
    employeeId: String!
    employee: Employee @foreignKey(field: "employeeId")
    clockIn: Timestamp!
    clockOut: Timestamp
}

query listTimeEntriesForEmployee(employeeId: String!, startTime: Timestamp, endTime: Timestamp) {
    timeEntries(
        where: { employeeId: { eq: employeeId }, clockIn: { gte: startTime, lte: endTime } }
        orderBy: [{ clockIn: "DESC" }]
    ) {
        timeEntryId
        clockIn
        clockOut
    }
}

query getLatestTimeEntry(employeeId: String!) {
    timeEntries(
        where: { employeeId: { eq: employeeId } }
        orderBy: [{ clockIn: "DESC" }]
        limit: 1
    ) {
        timeEntryId
        clockIn
        clockOut
    }
}

mutation clockIn(employeeId: String!) {
    createTimeEntry(
        timeEntry: {
            employeeId: employeeId,
            clockIn: "now()"
        }
    ) {
        timeEntryId
    }
}

mutation clockOut(timeEntryId: String!) {
    updateTimeEntry(
        timeEntryId: timeEntryId,
        timeEntry: {
            clockOut: "now()"
        }
    ) {
        timeEntryId
    }
}
